<?php
require_once 'entities.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-05 at 17:50:01.
 */
class Comic_XMLTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Comic_XML
     */
//    protected $emptyObj;
//    protected $normalObj;
//    protected $corruptedObj;
    
    private $normalXML = 'Comic_XMLTest_OK.xml';
    private $corruptedXML = 'Comic_XMLTest_CORR.xml';
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        //create test files
        
        $data1 = '<?xml version="1.0" encoding="UTF-8"?>
            <root>
                <title>Orange Life</title>
                <defaultLanguage>en</defaultLanguage>
                <isNew>1</isNew>
                <author>Lemon5ky</author>
                <booksCount>1</booksCount>
                <chaptersCount>1</chaptersCount>
                <authorLink>http://lemon5ky.net</authorLink>
                <authorEmail>dimathebest@mail.ru</authorEmail>
                <announce>Suprb com</announce>
        </root>
        ';
        file_put_contents($this->normalXML, $data1);
        
        $data2 = '<?xml version="1.0" encoding="UTF-8"?>
            <root>
                <title>Orange Life</title>
                <defaultLanguage>en</defaultLanguage>
                <isNew>1</isNew>
                jnknjdngls
        ';
        file_put_contents($this->corruptedXML, $data2);
        
    }
    
    public function testEmptyPath() {
        $emptyObj = new Comic_XML;
        $this->assertEmpty($emptyObj->title);
        $this->assertEmpty($emptyObj->announce);
        $this->assertEmpty($emptyObj->author);
        $this->assertEmpty($emptyObj->authorEmail);
        $this->assertEmpty($emptyObj->authorLink);
        $this->assertEquals($emptyObj->booksCount, 0);
        $this->assertEquals($emptyObj->chaptersCount, 0);
        $this->assertEquals($emptyObj->isNew, false);
        $this->assertEquals($emptyObj->defaultLanguage, DEFAULT_LANGUAGE);
    }
    
    public function testNormalXML() {
        $normalObj = new Comic_XML($this->normalXML);
        
        $this->assertEquals($normalObj->title,'Orange Life');
        $this->assertEquals($normalObj->announce,'Suprb com');
        $this->assertEquals($normalObj->author,'Lemon5ky');
        $this->assertEquals($normalObj->authorEmail,'dimathebest@mail.ru');
        $this->assertEquals($normalObj->authorLink,'http://lemon5ky.net');
        $this->assertEquals($normalObj->booksCount, 1);
        $this->assertEquals($normalObj->chaptersCount, 1);
        $this->assertEquals($normalObj->isNew, true);
        $this->assertEquals($normalObj->defaultLanguage, DEFAULT_LANGUAGE); 
    }
    
    public function testCorruptedXML() {
        $emptyObj = new Comic_XML($this->corruptedXML);
        $this->assertEmpty($emptyObj->title);
        $this->assertEmpty($emptyObj->announce);
        $this->assertEmpty($emptyObj->author);
        $this->assertEmpty($emptyObj->authorEmail);
        $this->assertEmpty($emptyObj->authorLink);
        $this->assertEquals($emptyObj->booksCount, 0);
        $this->assertEquals($emptyObj->chaptersCount, 0);
        $this->assertEquals($emptyObj->isNew, false);
        $this->assertEquals($emptyObj->defaultLanguage, DEFAULT_LANGUAGE);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        @unlink($this->normalXML);
        @unlink($this->corruptedXML);
    }

}
