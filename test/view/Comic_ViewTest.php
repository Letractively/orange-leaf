<?php
require_once 'comic_view.php';
require_once 'link.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-05 at 17:12:19.
 */
class Comic_ViewTest extends PHPUnit_Framework_TestCase {
    
    protected $data;
    protected $link;
    protected $dir = 'test/dir/';
    protected $junk = 'junk';
    protected $cachePath = 'cache.txt';
    
    protected function setUp() {
        @unlink($this->cachePath);
        
        $this->data = array(
            'descr' => array('foo'=>'bar'),
            'elements' => array(1,2,3,4),
            'stat' => array('a'=>1),
            'about' => array(),
            'lang' => 'en',
            'extra' => array('boo'=>'baz')
         );
        
        $this->link = $this->getMockForAbstractClass('Link',array($this->dir));        
    }

    protected function tearDown() {
        @unlink($this->cachePath);
    }

    /**
     * @covers Comic_View::cache
     *
     */
    public function testCache() {
        
    }

    /**
     * @covers Comic_View::hasCache
     * @todo   Implement testHasCache().
     */
    public function testHasCache() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Comic_View::displayFromCache
     * @todo   Implement testDisplayFromCache().
     */
    public function testDisplayFromCache() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function printJunk()
    {
        print $this->junk;
    }
    /**
     * @covers Comic_View::display
     * @covers Comic_View::buildHTML
     * @covers Comic_View::__construct
     * 
     */
    public function testDisplay() {
        $target_mock = $this->getMockForAbstractClass('Comic_View',array($this->link));
        $target_mock->expects($this->once())
                    ->method('buildHTMLImpl')
                    ->with($this->isInstanceOf('HTMLProvider'),
                           $this->equalTo($this->link))
                    ->will($this->returnCallback(array($this,'printJunk')));
        
        $this->expectOutputString($this->junk);
        $target_mock->display($this->data);
    }

}
