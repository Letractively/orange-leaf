<?php
require_once 'comic_view.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-05 at 17:12:18.
 */
class SafeGetterTest extends PHPUnit_Framework_TestCase {

    /**
     * @var SafeGet
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new SafeGetter;
        $this->testArr = array(
            'node1' => array(
                'subnode1' => 'foo',
                'subnode2' => 'bar'
            ),
            'node2' => 'baz',
            'digital' => array(1,2,3,4)
        );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers SafeGetter::safeGet
     */
    public function testSafeGet() {
        $ok_val = $this->object->safeGet($this->testArr, 'node1', 'subnode1');
        $digit_val = $this->object->safeGet($this->testArr, 'digital', '1');
        $empty_val = $this->object->safeGet($this->testArr, 'node2', 'non-existenmt');
        $null_val = $this->object->safeGet(null);
        $empty_arr = $this->object->safeGet(array());
        $this->assertEquals($ok_val, $this->testArr['node1']['subnode1']);
        $this->assertEquals($digit_val, 2);
        $this->assertEmpty($empty_val);
        $this->assertNull($null_val);
        $this->assertEmpty($empty_arr);
    }
    
        /**
     * @covers SafeGetter::safeEcho
     */
    public function testSafeEcho() {
        // Remove the following lines when you implement this test.
        $this->expectOutputString('foobar');
        $this->object->safeEcho($this->testArr, 'node1', 'subnode1');
        $this->object->safeEcho($this->testArr, 'node2', 'non-exsits');
        $this->object->safeEcho($this->testArr, 'node1', 'subnode2');
    }

}
